{-
   Дан текстовый файл, содержащий данные о нескольких студентах в следующем формате: три последовательные
   строки соответствуют имени, возрасту и номеру группы (например, 4.8). Определить соответствующий тип
   данных (data) и организовать чтение файла в список значений этого типа.

   Для двух данных файлов объединить загруженные списки в один список, упорядоченный по имени и сохранить
   результат в новый файл того же формата. Указание: всюду следует использовать монадический синтаксис
   (операции >>= и >>, функции ap, liftM и другие функции монадической обработки данных, использование
   блока do не допускается).
-}

data Student = Student {name::String, age::Int, group::String}
	deriving (Eq)
instance Show Student where
	show p =  "Name: " ++ name p ++ " Age: " ++ show (age p) ++ " Group: " ++ group p

readStudent str = let (n:a:g:tail) = (words str) in (Student n (read a) g)
	

main = undefined
